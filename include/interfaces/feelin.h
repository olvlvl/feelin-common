#ifndef FEELIN_INTERFACE_DEF_H
#define FEELIN_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 51.6.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef FEELIN_TYPES_H
#include <feelin/types.h>
#endif

struct FeelinIFace
{
	struct InterfaceData Data;

	/*** Library interface ***/

	ULONG			APICALL (*Obtain)(struct FeelinIFace *Self);
	ULONG			APICALL (*Release)(struct FeelinIFace *Self);
	void 			APICALL (*Expunge)(struct FeelinIFace *Self);
	struct Interface * APICALL (*Clone)(struct FeelinIFace *Self);
	APTR			reserved1;

	/*** Memory related functions ***/

	APTR			APICALL (*F_CreatePoolA)(struct FeelinIFace *Self, uint32 ItemSize, struct TagItem * Tagl);
	APTR			APICALL (*F_CreatePool)(struct FeelinIFace *Self, uint32 ItemSize, ...);
	void			APICALL (*F_DeletePool)(struct FeelinIFace *Self, APTR feelin_pool);
	APTR			reserved2;
	APTR			reserved3;
	APTR			reserved4;
	APTR			reserved5;
	APTR			reserved6;

	APTR			APICALL (*F_New)(struct FeelinIFace *Self, uint32 Size);
	APTR			APICALL (*F_NewP)(struct FeelinIFace *Self, APTR feelin_pool, uint32 Size);
	void			APICALL (*F_Dispose)(struct FeelinIFace *Self, APTR Mem);
    #if F_CODE_DEPRECATED
	uint32			APICALL (*F_DisposeP)(struct FeelinIFace *Self, APTR feelin_pool, APTR Mem); // deprecated
    #else
	APTR			reserved7;
    #endif

	void			APICALL (*F_OPool)(struct FeelinIFace *Self, APTR feelin_pool);
	void			APICALL (*F_SPool)(struct FeelinIFace *Self, APTR feelin_pool);
	void			APICALL (*F_RPool)(struct FeelinIFace *Self, APTR feelin_pool);

	APTR			reserved8;

	/*** List related functions ***/

	APTR			APICALL (*F_LinkTail)(struct FeelinIFace *Self, FList * List, FNode * Node);
	APTR			APICALL (*F_LinkHead)(struct FeelinIFace *Self, FList * List, FNode * Node);
	APTR			APICALL (*F_LinkInsert)(struct FeelinIFace *Self, FList * List, FNode * Node, FNode * Prev);
	APTR			APICALL (*F_LinkMove)(struct FeelinIFace *Self, FList * List, FNode * Node, FNode * Prev);
	APTR			APICALL (*F_LinkRemove)(struct FeelinIFace *Self, FList * List, FNode * Node);
	APTR			APICALL (*F_LinkMember)(struct FeelinIFace *Self, FList * List, FNode * Node);
	APTR			APICALL (*F_NextNode)(struct FeelinIFace *Self, APTR * Nodeptrptr);

	/*** String functions ***/

	STRPTR			APICALL (*F_StrFmtA)(struct FeelinIFace *Self, APTR Buf, STRPTR Str, int32 * Params);
	STRPTR			APICALL (*F_StrFmt)(struct FeelinIFace *Self, APTR Buf, STRPTR Str, ...);
	STRPTR			APICALL (*F_StrNewA)(struct FeelinIFace *Self, uint32 * Len, STRPTR Fmt, int32 * Params);
	STRPTR			APICALL (*F_StrNew)(struct FeelinIFace *Self, uint32 * Len, STRPTR Fmt, ...);
	uint32			APICALL (*F_StrLen)(struct FeelinIFace *Self, STRPTR Str);
	int32			APICALL (*F_StrCmp)(struct FeelinIFace *Self, STRPTR Str1, STRPTR Str2, uint32 Length);

	/*** Bug report functions ***/

	void			APICALL (*F_LogA)(struct FeelinIFace *Self, uint32 Level, STRPTR Fmt, int32 * Params);
	void			APICALL (*F_Log)(struct FeelinIFace *Self, uint32 Level, STRPTR Fmt, ...);
	void			APICALL (*F_AlertA)(struct FeelinIFace *Self, STRPTR Title, STRPTR Body, int32 * Params);
	void			APICALL (*F_Alert)(struct FeelinIFace *Self, STRPTR Title, STRPTR Body, ...);

	/*** Hash functions ***/

	FHashTable *	APICALL (*F_HashCreate)(struct FeelinIFace *Self, uint32 Size);
	void			APICALL (*F_HashDelete)(struct FeelinIFace *Self, FHashTable * Table);
	FHashLink *		APICALL (*F_HashFind)(struct FeelinIFace *Self, FHashTable * Table, UBYTE * Key, uint32 KeyLenght, uint32 * HashValuePtr);
	FHashLink *		APICALL (*F_HashAddLink)(struct FeelinIFace *Self, FHashTable * Table, FHashLink * Link);
	int32			APICALL (*F_HashRemLink)(struct FeelinIFace *Self, FHashTable * Table, FHashLink * Link);
	FHashLink *		APICALL (*F_HashAdd)(struct FeelinIFace *Self, FHashTable * Table, UBYTE * Key, uint32 KeyLength, APTR Data);
	int32			APICALL (*F_HashRem)(struct FeelinIFace *Self, FHashTable * Table, UBYTE * Key, uint32 KeyLength);

	/*** Dynamic IDs allocation system ***/

	int32			APICALL (*F_DynamicCreate)(struct FeelinIFace *Self, FClass * feelin_class);
	void			APICALL (*F_DynamicDelete)(struct FeelinIFace *Self, FClass * feelin_class);
	FClassAttribute * APICALL (*F_DynamicFindAttribute)(struct FeelinIFace *Self, STRPTR Name, FClass * FromClass, FClass ** RealClassPtr);
	FClassMethod *	APICALL (*F_DynamicFindMethod)(struct FeelinIFace *Self, STRPTR Name, FClass * FromClass, FClass ** RealClassPtr);
	uint32			APICALL (*F_DynamicFindID)(struct FeelinIFace *Self, STRPTR Name);
	void			APICALL (*F_DynamicResolveTable)(struct FeelinIFace *Self, FDynamicEntry * Entries);
	int32			APICALL (*F_DynamicAddAutoTable)(struct FeelinIFace *Self, FDynamicEntry * Table);
	void			APICALL (*F_DynamicRemAutoTable)(struct FeelinIFace *Self, FDynamicEntry * Table);
	struct TagItem * APICALL (*F_DynamicNTI)(struct FeelinIFace *Self, struct TagItem ** TagListptr, struct TagItem * Item, FClass * feelin_class);
	struct TagItem * APICALL (*F_DynamicFTI)(struct FeelinIFace *Self, uint32 Tag, struct TagItem * Tagl);
	uint32			APICALL (*F_DynamicGTD)(struct FeelinIFace *Self, uint32 Tag, uint32 Default, struct TagItem * Tagl);

	/*** Object-oriented system functions ***/

	FClass *		APICALL (*F_FindClass)(struct FeelinIFace *Self, STRPTR Name);
	FClass *		APICALL (*F_OpenClass)(struct FeelinIFace *Self, STRPTR Name);
	void			APICALL (*F_CloseClass)(struct FeelinIFace *Self, FClass * feelin_class);
	FClass *		APICALL (*F_CreateClassA)(struct FeelinIFace *Self, STRPTR Name, struct TagItem * Tagl);
	FClass *		APICALL (*F_CreateClass)(struct FeelinIFace *Self, STRPTR Name, ...);
	void			APICALL (*F_DeleteClass)(struct FeelinIFace *Self, FClass * feelin_class);

	uint32			APICALL (*F_DoA)(struct FeelinIFace *Self, FObject Obj, uint32 Method,APTR Msg);
	uint32			APICALL (*F_Do)(struct FeelinIFace *Self, FObject Obj, uint32 Method, ...);
	uint32			APICALL (*F_ClassDoA)(struct FeelinIFace *Self, FClass * feelin_class, FObject Obj, uint32 Method, APTR Msg);
	uint32			APICALL (*F_ClassDo)(struct FeelinIFace *Self, FClass * feelin_class, FObject Obj, uint32 Method, ...);
	uint32			APICALL (*F_SuperDoA)(struct FeelinIFace *Self, FClass * feelin_class, FObject Obj, uint32 Method, APTR Msg);
	uint32			APICALL (*F_SuperDo)(struct FeelinIFace *Self, FClass * feelin_class, FObject Obj, uint32 Method, ...);

	FObject			APICALL (*F_NewObjA)(struct FeelinIFace *Self, STRPTR Name, struct TagItem * Tagl);
	FObject			APICALL (*F_NewObj)(struct FeelinIFace *Self, STRPTR Name, ...);
	FObject			APICALL (*F_MakeObjA)(struct FeelinIFace *Self, uint32 Type, uint32 * Params);
	FObject			APICALL (*F_MakeObj)(struct FeelinIFace *Self, uint32 Type, ...);
	void			APICALL (*F_DisposeObj)(struct FeelinIFace *Self, FObject Obj);

	uint32			APICALL (*F_Get)(struct FeelinIFace *Self, FObject Obj, uint32 Attribute);
	void			APICALL (*F_Set)(struct FeelinIFace *Self, FObject Obj, uint32 Attribute, uint32 Value);

	/*** FC_Area support ***/

	void			APICALL (*F_Draw)(struct FeelinIFace *Self, FObject Obj, uint32 Flags);
	void			APICALL (*F_Layout)(struct FeelinIFace *Self, FObject Obj, WORD X, WORD Y, UWORD W, UWORD H, uint32 Flags);
	void			APICALL (*F_Erase)(struct FeelinIFace *Self, FObject Obj, WORD X1, WORD Y1, WORD X2, WORD Y2, uint32 Flags);

	/*** Shared objects functions ***/

	FObject			APICALL (*F_SharedFind)(struct FeelinIFace *Self, STRPTR Name);
	FObject			APICALL (*F_SharedCreate)(struct FeelinIFace *Self, FObject Object, STRPTR Name);
	void			APICALL (*F_SharedDelete)(struct FeelinIFace *Self, FObject Shared);
	FObject			APICALL (*F_SharedOpen)(struct FeelinIFace *Self, STRPTR Name);
	void			APICALL (*F_SharedClose)(struct FeelinIFace *Self, FObject Shared);

    /*** added at v10 ***/

    STRPTR			APICALL (*F_StrNewPA)(struct FeelinIFace *Self, APTR Pool,uint32 *Len,STRPTR Fmt,int32 *Params);
    STRPTR			APICALL (*F_StrNewP)(struct FeelinIFace *Self, APTR Pool,uint32 *Len,STRPTR Fmt,...);

    /*** added at v11 ***/

	FAtom *			APICALL (*F_AtomFind)(struct FeelinIFace *Self, STRPTR Str, uint32 Length);
	FAtom *			APICALL (*F_AtomObtain)(struct FeelinIFace *Self, STRPTR Str, uint32 Length);
	void			APICALL (*F_AtomRelease)(struct FeelinIFace *Self, FAtom *Atom);
	APTR            APICALL (*F_AtomCreatePool)(struct FeelinIFace *Self);
	void            APICALL (*F_AtomDeletePool)(struct FeelinIFace *Self, APTR Pool);
	FAtom *         APICALL (*F_AtomFindP)(struct FeelinIFace *Self, APTR Pool, STRPTR Str, uint32 Length);
	FAtom *         APICALL (*F_AtomObtainP)(struct FeelinIFace *Self, APTR Pool, STRPTR Str, uint32 Length);
	void            APICALL (*F_AtomReleaseP)(struct FeelinIFace *Self, APTR Pool, FAtom *Atom);

};

#endif /* FEELIN_INTERFACE_DEF_H */
